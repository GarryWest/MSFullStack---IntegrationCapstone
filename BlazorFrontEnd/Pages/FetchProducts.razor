@page "/fetchproducts"
@using System.Text.Json.Serialization
@inject HttpClient HttpClient

<h3>Product List</h3>

<ul>
   @if (products != null)
    {
        foreach (var product in products)
        {
            <li>@product.Name - $@product.Price</li>
        }
    }
    else
    {
        <li>Loading...</li>
    }
</ul>

@code {
    private Product[]? products;
    protected override async Task OnInitializedAsync()
    {
        try
        {
            //using var httpClient = new HttpClient();
            var response = await HttpClient.GetAsync("/api/products");

            if (response.IsSuccessStatusCode)
            {
                var jsonResponse = await response.Content.ReadAsStringAsync();
                products = System.Text.Json.JsonSerializer.Deserialize<Product[]>(jsonResponse);
            }
            else
            {
                // Handle unsuccessful response
                Console.WriteLine($"API call failed: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            // Log or handle exception
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }


    public class Product
    {
        [JsonPropertyName("id")]
        public int Id { get; set; }
        [JsonPropertyName("name")]
        public string Name { get; set; }
        [JsonPropertyName("price")]
        public double Price { get; set; }
        [JsonPropertyName("stock")]
        public int Stock { get; set; }
    }
}    
